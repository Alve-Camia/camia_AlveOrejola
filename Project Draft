Project title: Automated Attendance System 

Problem Statement: 
  When it comes to attendance, there is still a use of manual and automated attendance tracking. Though it has reasonable efficiency, issues still arise from it. For attendance involving
manual tracking, this method of attendance over relies on one or more people to check the attendance. On the other hand, the common automated attendance in the campus (QR) can only focus
on checking attendance for one student every time, reducing the speed. This is more apparent when it is tracking attendance for a larger 
number of people such as a batch. 
  For this automated attendance system project, we will attempt to make an attendance system that addresses the following issues said earlier, ideally by allowing one to record their 
attendance and send it to the person handling it. However, features will be needed to avoid dishonest attendance recording. That way, the 
finished project would have less loopholes and prevent academic dishonesty (In this situation, “cheating” on attendance). 

Project Objectives:
•	Allow students to record their attendance instead of relying on a single person/object to do so.
•	Consider input/output validation in attendance system to prevent dishonest attendance recording   
Planned Features: 
• Log in and log out program feature
•	Option to (create/check, record) an attendance tracker
•	Current time utulization for checking attendance 
•	Settings feature
• Notifications

Planned Inputs and Outputs:
1.
(User) Input: Opens Program
(Program) Output:
• Asks user for account name and password

2a.
(User) Input: Successfully logging into the program
(Program) Output:
• Displays attendnce tracking options, account settings, and log out option.
• Display current time 

2b.
(User) Input: Inputs invalid account name or password
(Program) Output:
• Display "Invalid account name or password. Please try again."

3.
(User) Input: Chooses the option to create an attendance tracker
(Program) Output:
• Asks user to enter attendance tracker name, when to start and stop consider attendance submissions as "Present", and method of attendance (e.g, pin/password).
(Example for start and stop checking attendance format: MM, DD, YYYY, from [Start Time] to [End Time]
• Additionally asks user whether they want to modify attendance tracker 
• Show user a preview of what their attendance trakcer (for attendee point of view)

4.
(User) Input: Checking attendance trackers (Made by the user)
(Program) Output:
If user hasn't made any attendance trackers:
  • Program displays "No current attendance trackers you've made.
Otherwise:
  • Program displays current attendance trackers made by user

5.
(User) Input: Checks overview of attendance tracker
(Program) Output:
Program displays the following:
• Attendance tracker status (Not started, Ongoing, Ended)
• Attendee entries and info (e.g, account name, time of attendance tracked)
• Option to give comments from attendee entries and change attendees' status

6.
(User) Input: Records their attendance for an attendence tracker
(Program) Output:
• First, the program asks user for the attendance tracker name (Case-sensitive).
  If name isn't valid:
    • Program displays "Name not valid. Please try again."
  If name is correct, but...
    Attendance tracking hasn't started:
      • Program displays "Attendance tracker hasn't started yet. Try again later."
    Attendance tracking is no longer accepting "Present" attendance submissions:
      • Program displays fields/required entries from attendance tracker owner but will be reflected as "Tardy."
Else:
• Program displays fields/required entries from attendance tracker owner and will be reflected as "Present."

7.
(User) Input: Selects Account settings on main page:
(Program) Output:
Program displays the following:
  • Change account name or password 
  • Manage Attendance Record History
  • Time Format
  • Appearances and Notifications 

8.
(User) Input: Selects to log out
(Program) Output:
Program displays "Session ended."
Program asks if user wants to log in back.
